package main

import (
	"github.com/adrien3d/adventofcode/utils"
	"math"
	"sort"
	"strings"
)

type Seat struct {
	Encoded             string
	Row, Column, SeatID int
}

func solve(input string, verbose bool) (part1TotalScore, part2TotalScore int) {
	lines := strings.Split(input, "\n")
	var seats []Seat
	var seatIDMax int
	for _, line := range lines {
		var seat Seat
		rowMin, rowMax, columnMin, columnMax := 0, 127, 0, 7
		for i := 0; i <= 6; i++ {
			R := int(math.Pow(2, float64(6-i)))
			if string(line[i]) == "F" {
				rowMax = rowMax - R
			} else {
				rowMin = rowMin + R
			}
		}
		if rowMin != rowMax {
			utils.Log(verbose, "err", "rowMin != rowMax", rowMin, rowMax)
		}
		seat.Row = rowMin
		exponent := 2
		for j := 7; j <= 9; j++ {
			R := int(math.Pow(2, float64(exponent)))
			exponent--
			if string(line[j]) == "L" {
				columnMax = columnMax - R
			} else {
				columnMin = columnMin + R
			}
		}
		if columnMin != columnMax {
			utils.Log(verbose, "err", "columnMin != columnMax", columnMin, columnMax)
		}
		seat.Column = columnMin
		seat.SeatID = seat.Row*8 + seat.Column
		//utils.Log(verbose, "info", seat)
		if seat.SeatID > seatIDMax {
			seatIDMax = seat.SeatID
		}
		seats = append(seats, seat)
	}
	utils.Log(verbose, "warn", seatIDMax)

	sort.Slice(seats, func(i, j int) bool { return seats[i].SeatID < seats[j].SeatID })

	missingSeatID := 0
	for i, _ := range seats {
		if i != 0 && i != (len(seats)-1) && seats[i+1].SeatID-seats[i-1].SeatID != 2 {
			missingSeatID = seats[i].SeatID + 1
			//fmt.Println(seats[i])
			break
		}
	}
	utils.Log(verbose, "warn", missingSeatID)

	return seatIDMax, missingSeatID
}

func main() {
	//testInput := "FBFBBFFRLR"
	testInput := "BFFFBBFRRR\nFFFBBBFRRR\nBBFFBBFRLL"
	realInput := "BFBBBFBLRR\nBBFFFFFLRR\nBFBFBFFRLR\nFBBBBFFLLL\nBFBBBBFRRL\nFFBFFBFRLR\nFFFBFBBRRL\nFBFBBFBLRL\nFBFFFBFLLR\nFFBBFBBLLL\nFBFBBFFRLL\nFFBFFBFLRL\nFFBFBFFRRR\nBFFFFBBLRR\nFFBFFBFRRL\nFFBFBFFLRL\nBBFFFFFRLL\nFFFBFBBRRR\nFBFBFBBLLR\nFBFBFBFLLR\nBFBFBFFRLL\nFFFBFFBRLL\nBBFFFBFLRL\nBFBFBFBLLR\nFFFFBBBRLL\nFFBBBFFLRL\nFBFFBFBRLR\nFFBFBBFLLR\nFBFBFFFRRL\nBFBBFBBLRR\nBFBFFFBRRR\nBFFBBBFRLL\nFFBFFFFRRL\nFFFFBBFLRL\nBBFFFBBRLR\nBFFBFBBRRL\nBFFFFFBLRR\nFBFFFFBLLL\nFFBFBBFLLL\nBFBBBFBRRR\nBBFFFBFLLR\nFBBBFFFRRL\nBFBBBBBLLL\nBFBFFFBRLR\nFFBBFBBLRR\nFBFBFFFLLL\nBFBBBFBRLL\nBFFBFBFRRL\nBFBFBFFRRR\nFBBFFFFLLR\nFFBBBFFLLL\nBFFBFBBRRR\nFFBFBFBRRR\nFFFBBFFRRR\nFFBBFBFRLR\nFBBBFBFRRR\nFFBFFBFRLL\nBFBBBFFRLR\nFBFFFFFRLR\nBFBBBFBRRL\nFBFFBFBRRL\nFFBFBBFRLL\nFFFBBBBLLL\nFFBBBFBLLR\nFFBBFFBRRR\nFFBBBBFRRR\nFFBFBBBLRL\nFBBBBBFLLR\nBFBFBBFLLR\nFFFBBBFRLL\nBFBFFBBRRL\nFBFBBFBLLL\nFBFFBBFLRR\nFBBBFBFLRL\nFFBBFBFRLL\nFFBBBFFRRR\nBFFBBBBRLR\nFFBFFBBRLL\nFBFBFBBRRL\nFFBFFBFLLR\nFBFBFFBLLR\nFBFBBFFLLL\nFBFBBFBLLR\nFBBFBBFRLL\nBFFFBFFRLL\nFFBBBFFRLL\nFBFBBFBRRR\nBFFBBFFRLL\nFFBFBBFRRR\nFBBFFFFRRL\nBFBBFBFLRR\nBFBFFFFLRL\nBFFFFBBRRR\nBFFBFFBLRR\nFBFFFBFLRL\nFBFBFBFLRL\nFFBBFBFRRR\nBFFFFBFRRR\nFBBBBBFLRL\nBFFFBBBRLL\nBFFBBBBLRR\nFFBBBBFRLR\nBFFFBBFRLR\nFBBFFBFLLR\nFBFBBBFLRR\nFBFFFFBRRR\nFFBBBBBLLR\nFFBBFFFRRL\nFBBFFBBLRL\nFBFBBBFRRL\nBFFBFBFRRR\nFFBBBBFLLR\nFFBBFFBLRL\nFFBBBBBRLL\nFFFBFBBLRL\nBFFFBFFLRR\nBFBBBFFLRR\nFFBFFFFRRR\nFBBFFBBLLR\nFBBBBFFRRR\nBFBBBFFRRL\nFBBFFBBLLL\nFBFBFBBLRL\nBFBBBFFLLR\nBBFFFBBLRL\nFBBBFBBLLR\nBBFFBFFLLL\nFBBBFFFRRR\nBFFBBFFLRR\nFFBBFFFRLL\nBFBBFFFLRR\nFFBFFFFLLR\nFFFBFFBLLL\nFFBBBFFRLR\nFFBFFFBRRR\nFBFBBBBLRL\nFBBFBBBRLL\nFBBFBFFLLR\nFFFFBFBLRR\nBFFFBBFLRL\nFBFFBBFRLR\nBBFFFFBRRR\nFFFBBBFLRL\nFBBFBFFRRR\nBFFBBFBRRR\nFFFFBBBRLR\nFBBBFBBRLL\nFBBFBFFRRL\nFBFFFFBLRR\nBFFBBBBLRL\nFBBBBBFRLR\nFFFBFFBLLR\nFBBFBFBRLR\nFBBBBBFRRR\nBFBBFFBRLR\nBFFFFFBRRR\nFFFBFFBRRR\nBFBBBBFLLL\nBFBFFFFLRR\nFFBBFBBRRR\nBBFFFBFRLL\nFFBBBBBLRR\nFBBBFBFLLR\nFBFFFFFRLL\nFFBBFFBLRR\nFBFFFFFLRR\nBFBBFBFRRR\nFFBBFFBRLR\nFBBFFFBLLL\nBFFBFBFLLR\nFBBFBFFRLL\nFBBBBFBLRL\nBFFFFBFRRL\nFBFBBFBRRL\nBFFFFBBLLL\nFBFFBFBLLR\nBFFBBFBRLL\nBFBFFFBRRL\nFBFFBFFLLR\nBFBFFFFRRL\nFFBFFFBRLR\nFFBBBBFLRR\nBBFFFFBLLL\nBFBBBBBRLL\nFFBFBBFRLR\nBBFFFFFRLR\nFBFFFBBRRR\nBFFFBFBRLL\nFBBBBFFLRL\nBFFFFBFLRR\nFBBFBFFLRL\nBFBFBFBLRL\nFBBFFBFRLR\nFBBFFFBLLR\nFBBBBFFRLL\nBFBBBFFRRR\nFBBFBBFLLR\nFBBFFBFLRL\nBFFBFBBLLR\nFBBBFBFLLL\nFBBBBBBRRR\nFBFBBFBRLR\nFFBFBFBRRL\nFBFBBBBRRR\nFFBBBFBLRR\nFBFFBFBLRL\nFFBFFFBLRL\nBFBFBFFLRR\nFBFFFFBLRL\nBFFBFFFLRR\nBFBBBBFRLL\nFBFFBBBLRL\nFBFBFBBLRR\nBFBFFFBLRL\nBFBFBBBLRL\nFFBFBFBLRL\nBFFBFFBRRL\nBBFFFBFRRR\nFFFBFFFRLR\nFFFBFBFRRL\nFFBBBFFLRR\nBFBBBFFRLL\nBFBBFBBLLL\nFBBBBFBLLL\nBFFFBFFRLR\nBFFBBFBLLL\nFFBBFBFLLL\nFFFBFBFLLR\nFBFFBFFLRR\nBFBFFBFRLR\nBFFBBBFLLL\nFFBFFFBLLL\nFFFBFFFRRL\nFFBFFFBLRR\nFBBFBBFRRR\nBBFFFBBLLR\nBFFFBFFLLR\nFFBFBBBRLL\nBFFFBBBLRR\nFFBFBFFLLL\nFFBFFBBLLL\nBFBBFBBRRL\nBBFFFFFRRL\nFBFFBFFLLL\nFFBFFBFLRR\nBBFFFFFRRR\nFBBFFFBRRL\nFBFFBBFLRL\nBFFBBBFRRL\nBFBBFFFRRL\nBFBFFBFLRR\nFBBBFFFLLR\nFFFFBBBLLR\nBFFBFFBLRL\nFFBFFFBLLR\nFFFBFBBRLL\nFBFBBBFLLL\nBFBFBFBRRL\nBFFFBBBRRL\nFFFFBBFRRR\nFBBFBBBLRL\nFFBBBBBLLL\nBBFFBFFLLR\nFBFFBBBLLR\nBFBFFBFRLL\nBFFFFFBLRL\nFFFFBFBLLL\nFBBBBFBRRL\nFBFBFFBLRR\nFFFBBFFLLR\nFBFBFBFLRR\nBBFFFBBLRR\nFFFBBFBLLR\nFFBBBFBRRR\nFFFBBBFRRR\nBFBFBFFLLL\nFBBBBBFRRL\nBFFBFFBLLR\nFFBFBBFLRR\nBFFBFBBLRR\nFBBBFBBLRL\nFBFFBBFRLL\nBFFBBBBRRL\nBFFBBBBRRR\nBFFFBBFRLL\nBFBBBBBLRR\nFFBBBBFLRL\nFBBBBFFLRR\nBFBFFBBRLR\nFBBFBBBLRR\nFBFBFBBRRR\nBBFFFBBRLL\nFBBBBFBRLL\nFFBFBFFLLR\nFBFFFBFRRR\nBFBFBBFRRR\nBFFFBFFRRL\nBFBFFBFLLR\nFFFBBBBLLR\nFBBBFFFLRL\nFBBFBBFRRL\nFBBFBBBLLR\nBFFFFBBLLR\nFBBBBBBLLL\nBFFFFFFRRR\nFFFBBBBRLR\nFFFBFBFRLR\nFFFFBFBLRL\nFBFBFFBRRR\nFBBBBBBLRR\nBFBBBFBRLR\nFBFBBBFRLL\nFBBFFBBLRR\nBFFFBBFRRL\nFBBBBFFRLR\nBFFBFFBRRR\nBFFFBFBLLR\nBFFFBBBRRR\nBFFBBBFLRL\nBFBBFBBLRL\nBFFBBFFLLR\nBFFFFFBRLR\nFBBFFBBRRL\nBFFFFFBRRL\nFBBBFFBLRL\nFBFBBFBRLL\nBFFBFBFLLL\nBFFBFBBRLR\nBFFBFFFLRL\nBFBFBBBLLR\nFBFBFFBRLL\nBFFBBFBLLR\nBFFBFBBLLL\nBFFBBFBLRL\nFBBFFBFRRL\nBFBFBBFRLR\nFBFFFFBRRL\nFBFBFFFRRR\nFFFBBFFRRL\nFFFFBFBRRL\nBFFFFFFLLR\nFBBFFFFRLR\nFBFBBFFRLR\nFFBBFFBRRL\nFBBFBBFRLR\nFFBBFBFLRL\nFFFFBBBLLL\nFFBBFFFLLR\nBFBBFBBRLL\nBFFFFBBRRL\nBFFBBFBRRL\nFBBFBBBRRL\nBFBFBFFLRL\nFBFFFBBLRL\nFFFFBBBRRR\nFBFFBBFLLR\nBFFBBFBRLR\nFBBFBBFLRL\nFFBBFFFRLR\nBBFFFBBRRR\nFFBBBBBLRL\nFBBBBBBRLL\nFFFBBBFRLR\nFFBBFBFRRL\nFFBBBBBRRL\nBFBFBBFRLL\nFBFFBFFRLR\nBFBFBBBRLR\nFFBFFFFLRL\nFBFFBFBLRR\nFBFFBFBRRR\nFFFBBFBRRR\nFBFFFBFLLL\nBFFBFBFRLL\nFBFFBFBRLL\nFFBFFBBLRR\nFFFFBFBRLR\nBFFBBBBRLL\nBFBBFFBLRR\nFFBFFBFLLL\nFFBFBBBRLR\nFFBFFFFRLR\nFBBFFFBRLR\nBFFFFFFLLL\nBFBBBFFLRL\nFBBFBFFLLL\nBFBBFBBRRR\nBFBFFBBRLL\nFBBFBFBLRL\nBBFFFFFLLL\nFBFFFBFRRL\nBFBBBFBLLR\nBFFFFBBRLL\nFFBFBBFLRL\nFFFBFBBLLR\nFBFBFFFLRR\nFBBBBBBLLR\nBFFBFFBRLL\nFBFFBFFRRL\nFFBFBBBLLR\nFBBBFBFLRR\nFFBFBBBRRL\nFBBFFBBRLR\nBFFFBBBLRL\nFBBFBBBRRR\nBFFBBBFLRR\nFBBFFFBRRR\nBFBFFFFRLL\nBFBBBBBRRR\nFBFBBFFRRR\nFBBBBBFLRR\nFBBBFFBLRR\nFFBBBBBRRR\nFFFBFFFLLR\nBFBBBBFRRR\nBFFBFBFLRR\nBFFFBBFLLR\nFBFFFFFLLL\nFBBFFFFRLL\nBFFBBBFRLR\nBBFFFFBLLR\nFBBBBFFLLR\nBFFFBFBRLR\nBBFFFFFLRL\nBFFFFBFLRL\nBFFFFBBLRL\nFBFFBBBLRR\nFBFFBBBRRR\nFBFBBFBLRR\nFBBBBBBRRL\nFFFBFFBLRL\nFBFBFBFRLR\nFFFBBFBLRR\nBFBFFBFLRL\nBFBFFFBRLL\nBFFFBFBRRR\nFBFBBBFLLR\nBFFBBBFRRR\nBFBFBBFLRR\nFBBFBFBLLL\nFBFBBBFRRR\nBFBBBBFRLR\nFFFBBBBLRL\nFFFBFFFLLL\nFFFBBBFLLL\nBFBBFFBRRL\nBFBBFBBLLR\nFFBBBBFRLL\nFBBBBFFRRL\nFFBBBFBRRL\nFBBFFFBLRL\nFFBFFBBRLR\nBFBFFBBLLL\nFBFFFBFLRR\nFFBBFFBLLL\nBFFFFBFLLR\nFFFBFBFLRL\nFFFBBBBRLL\nBBFFFBBRRL\nBFBFFBBLRR\nFFFFBFBLLR\nBFBBFBFLLR\nBFBBFBFRRL\nFFBBFBBLLR\nFBFFBBFRRL\nBFFBBFFRRL\nFBFBBBBLLR\nFBFBBBFRLR\nBFBFFFFLLL\nFFBBFFBLLR\nFBFFBBFRRR\nBFFFFFFRLL\nFBFFFFFLLR\nFFFBFFBRRL\nFFBBFBBLRL\nFBBFBFBLLR\nBBFFFBFRRL\nFFBBFBFLRR\nBFBBFBFLRL\nFBFBBBFLRL\nBFFFFFFLRL\nFFFBFBBRLR\nFFBBFBBRLR\nFBBFFBFLLL\nBFFBFBBLRL\nFBFFBBBLLL\nFBBBFFFLRR\nBFFBBBBLLL\nFBBBFBFRLL\nFBBBFBBLRR\nFBFFFBBRLL\nFFBFBBBLRR\nFBFBFFFLRL\nBFFBFFFRLR\nFFBBBFBRLR\nFFFBBFBRLL\nBFFFFFFLRR\nFBBBFBBRRR\nFBFFBFFLRL\nFBFFBFBLLL\nFBBBFBFRLR\nFBFBFBBRLL\nFBBBFBBLLL\nFFBBBFBRLL\nFFFBFBFLLL\nFBFFFBBRRL\nBFFFBFFLLL\nFBBFBFBLRR\nFBBBBFBLRR\nFBBFFBFLRR\nFBBBBBBLRL\nBFFBFFFRLL\nBFBFBBFRRL\nBFBFFFFRRR\nBFFFBFBRRL\nFFFFBFBRLL\nFBFBBFFLRR\nBBFFFBFLLL\nBFBBFFBRRR\nFBBFBFBRRR\nFBFFBFFRLL\nBFBFBBBLRR\nFBBFFBFRRR\nFBBFBFBRLL\nBFFFFBBRLR\nBFBFBBBLLL\nFBFBFBFLLL\nBFFBFFBRLR\nBFBFFFBLLR\nFFFBFFFRLL\nFBFFFFFRRR\nFFFBFFFLRR\nFFBFFBFRRR\nBFFFFBFLLL\nFBBBBFBRRR\nFBBBFFFLLL\nFFBFFBBLLR\nBFFFFFFRRL\nFFFFBBBLRL\nFBFBFBBRLR\nFBBBFFBRLR\nFBBFBFFRLR\nBBFFFBFRLR\nFBBFBBFLLL\nFBBFFFFLRR\nFBFFFBBLLL\nBFBBFFFRLL\nFFFBFBFRLL\nBFFFBBFRRR\nFFBFFBBRRL\nBBFFFBBLLL\nBBFFFFFLLR\nBBFFFFBRLL\nFBBBFFBRLL\nFBFBFBFRRL\nFFFBFBBLLL\nBFFBFBFLRL\nBFBFFBBRRR\nFFFBBBBRRL\nBFFFBBFLLL\nFBFFBBBRLL\nFFFBFBBLRR\nFBBFFFBLRR\nBFBBFFFLLR\nFFBBFFFLRL\nFBBBFFBRRR\nFFFBBFFRLR\nFBFFFFBLLR\nBFFBFFFRRL\nFBFBFBFRRR\nFBBBBBFRLL\nBFFFFFBRLL\nFFFBBFBLRL\nBFFFFFBLLL\nBFFFBFBLLL\nFBFBFFFRLR\nBFBFFFFRLR\nFBFBBFFRRL\nBFBBFFFRLR\nFFBFFFFRLL\nFFFBBFBRRL\nFBBBFFBLLL\nBFBFBFBLRR\nBFFFFBFRLL\nBFBBFFBLLL\nFBBFBBBLLL\nFBBFBBBRLR\nBBFFFFBRRL\nBFBFBFFRRL\nFBBBFBBRRL\nBFBBBBFLRR\nFFBFBBBRRR\nFFFBFFFLRL\nFFFBFFFRRR\nFFBBFBBRRL\nFFBFBFBLLR\nBFBFFFBLLL\nFBFBFFBLLL\nBFFFBFBLRR\nBFFBFFBLLL\nBBFFFFBLRR\nFFBFBFFRLR\nFBFFFBFRLR\nFFBBBBBRLR\nFBFFFBFRLL\nFBFBBBBRLL\nFFBFFFBRRL\nBFFFBBBLLL\nFFBBBFBLLL\nBFFFBFFRRR\nFFFBBFFRLL\nFFFBBBFRRL\nFBFBBFFLRL\nFFBBFFFLRR\nFFFFBBBRRL\nFFBBBBFLLL\nFFBFFFBRLL\nFBFFBBBRRL\nBFBBFFFRRR\nFFBBBFFLLR\nFFBBBFFRRL\nBFBBFBFRLR\nFFFFBBFLLL\nFFBBBBFRRL\nFBBFFFFLLL\nBFFFBBBRLR\nFBFFBBBRLR\nBFBBFFFLRL\nBFBFBBFLLL\nFBFFFFBRLR\nBFFBBFFRRR\nFBFBBBBLLL\nBFFBFBBRLL\nFBFBFFBRLR\nBFBFBFFLLR\nFFFFBBFRLL\nBFFBFFFRRR\nFBFBBBBRLR\nBFBBBBFLRL\nBFBFBFBLLL\nBFBFFBBLRL\nBFBFFBBLLR\nBFBBFFBRLL\nFFBFBBBLLL\nBFBFBBBRLL\nBFBFBBBRRR\nFFFFBBBLRR\nFFFBFBFLRR\nBFFFBBBLLR\nFBBBBBFLLL\nFFFBBFBLLL\nFBFBFFFRLL\nFBBBFFFRLR\nFFBFBFFLRR\nFFFFBBFRLR\nFFFFBFBRRR\nFFFBBFBRLR\nFFBFBFBLLL\nFFBFFFFLRR\nFFFBFBFRRR\nFFBBFFFLLL\nFBBBFFBLLR\nBFBFBBBRRL\nFFBBBFBLRL\nBFBBBBBRRL\nFFFBBBBLRR\nFBBBFFBRRL\nFFBFBFFRRL\nFBBBBBBRLR\nFBFFBFFRRR\nBFFFFBFRLR\nFFBBFFBRLL\nBFFBBBFLLR\nFBFBFBFRLL\nBFBFBFBRLR\nFBFFFBBLLR\nFBFBFFBRRL\nFBBFFFBRLL\nFFBFBFBRLR\nFFBFBFFRLL\nFFFBFFBRLR\nBFBFBFBRRR\nFFFBBBBRRR\nBFBFFBFRRR\nBFBBFFBLRL\nFBBFFBFRLL\nBFFBBFFLRL\nFFBFBFBRLL\nFBFBBBBLRR\nBFBFBFBRLL\nBFBFFBFRRL\nBFFFFFFRLR\nFFBFFBBRRR\nFFBBFBFLLR\nFFFBBFFLLL\nBFBBBFBLRL\nFBFFFFBRLL\nFBBBFBBRLR\nBFFFBBFLRR\nFBBBBFBRLR\nBFBBBFFLLL\nFBFBFBBLLL\nBBFFFFBRLR\nFBFBFFFLLR\nFBFBBBBRRL\nFFBFBBFRRL\nBFFBBFFLLL\nFBBFBBFLRR\nBFFFFFBLLR\nBFBBFFFLLL\nFBBFBFFLRR\nFBBFFBBRRR\nFBFFFFFLRL\nBFBFFFBLRR\nFFFBFFBLRR\nFBBFFBBRLL\nBFBBBBBLRL\nFFFBBBFLRR\nBFBBBFBLLL\nFBFFFBBRLR\nFFBBFBBRLL\nFBFFFBBLRR\nFBFBBFFLLR\nFFFFBBFRRL\nFBBFFFFRRR\nBFFBFFFLLR\nFFFBBFFLRL\nFFFBBBFLLR\nBFFFBFFLRL\nFBBBBFBLLR\nFFBFBFBLRR\nBFBBFBFLLL\nBFFBBFFRLR\nBFBBBBFLLR\nFFFFBBFLRR\nBFBFBBFLRL\nBBFFFBFLRR\nBFBBFBBRLR\nFBFBFFBLRL\nFFFBBFFLRR\nFFBBFFFRRR\nBFFBBBBLLR\nBBFFFFBLRL\nFBFFBBFLLL\nFFFFBBFLLR\nFBBBFBFRRL\nFFBFFBBLRL\nBFBBFFBLLR\nBFBFFFFLLR\nBFBBBBBRLR\nBFBBFBFRLL\nBFFBFFFLLL\nFFBFFFFLLL\nBFBFFBFLLL\nFBBFFFFLRL\nBFBBBBBLLR\nBFFBBFBLRR\nBFFFBFBLRL\nFBBBFFFRLL\nFBBFBFBRRL\nFBFFFFFRRL"
	utils.Run(solve, testInput, true)
	utils.Run(solve, realInput, true)
}
